name: Build and Release

on:
  push:
    branches:
      - main
    tags:
      - "v*"

env:
  BINARY_NAME: sbcli

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-apple-darwin
          - x86_64-pc-windows-msvc
        include:
          - os: ubuntu-latest
            rust_target: x86_64-unknown-linux-gnu
          - os: macos-latest
            rust_target: x86_64-apple-darwin
          - os: windows-latest
            rust_target: x86_64-pc-windows-msvc

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.rust_target }}
          profile: minimal

      - name: Build
        run: cargo build --release --target ${{ matrix.rust_target }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.rust_target }}
          path: target/${{ matrix.rust_target }}/release/${{ env.BINARY_NAME }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Setup release
        run: |
          mkdir -p release
          for platform in x86_64-unknown-linux-gnu x86_64-apple-darwin x86_64-pc-windows-msvc; do
            if [[ $platform == "x86_64-pc-windows-msvc" ]]; then
              cp artifacts/$platform/${{ env.BINARY_NAME }}.exe release/${{ env.BINARY_NAME }}-$platform.exe;
            else
              cp artifacts/$platform/${{ env.BINARY_NAME }} release/${{ env.BINARY_NAME }}-$platform;
            fi
          done

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: "release/*"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
